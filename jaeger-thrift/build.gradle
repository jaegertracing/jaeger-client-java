apply plugin: 'org.jruyi.thrift'
apply plugin: 'com.github.johnrengelman.shadow'

description = 'Library to send data to Jaeger backend components via Thrift'

dependencies {
    compile project(':jaeger-core')

    compileOnly group: 'org.apache.thrift', name: 'libthrift', version: apacheThriftVersion
    compileOnly group: 'com.squareup.okhttp3', name: 'okhttp', version: okhttpVersion

    testCompile group: 'junit', name: 'junit', version: junitVersion
    testCompile group: 'com.tngtech.java', name: 'junit-dataprovider', version: junitDataProviderVersion
    testCompile group: 'org.awaitility', name: 'awaitility', version: awaitilityVersion
    testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: jerseyVersion

    // compileOnly dependencies aren't visible to tests
    testCompile group: 'com.squareup.okhttp3', name: 'okhttp', version: okhttpVersion
    testCompile group: 'org.apache.thrift', name: 'libthrift', version: apacheThriftVersion

    signature 'org.codehaus.mojo.signature:java16:1.1@signature'
}

compileThrift {
    thriftExecutable "${projectDir}/../travis/docker-thrift/thrift"
    sourceDir "${projectDir}/../idl/thrift"
    outputDir 'src/main/gen-java'
    generator 'java', 'private-members'
    createGenFolder false
}

tasks.withType(Javadoc) {
   enabled = false
}

sourceSets {
    main {
        java {
            srcDir 'src/main/gen-java'
        }
    }
}

licenseMain.enabled = false
checkstyleMain.enabled = false
checkstyleTest.enabled = false

jar {
    classifier 'no-shadow'
}

shadowJar {
    baseName = 'jaeger-thrift'
    relocate 'com.google.gson'  , 'jaeger.com.google.gson'
    relocate 'com.twitter'      , 'jaeger.com.twitter'
    relocate 'okhttp'           , 'jaeger.okhttp'
    relocate 'okio'             , 'jaeger.okio'
    relocate 'org.apache'       , 'jaeger.org.apache'
    classifier null
    configurations = [project.configurations.compileOnly]
}

task testJar(type: Jar, dependsOn: testClasses) {
    baseName = "test-${project.archivesBaseName}"
    from sourceSets.test.output
}

configurations {
    tests
}

artifacts {
    archives(shadowJar.archivePath) {
        builtBy shadowJar
    }
    tests testJar
}

sonarqube {
    properties {
        property "sonar.exclusions", "**/gen-java/**"
    }
}