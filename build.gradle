plugins {
    id "org.jruyi.thrift" version "0.3.1"
    id "jacoco"
    id "com.github.hierynomus.license" version "0.14.0"
    id 'com.github.sherter.google-java-format' version '0.3.2'
    id "com.github.johnrengelman.shadow" version "1.2.3"
    id "net.ltgt.errorprone" version "0.0.10"
    id 'ru.vyarus.animalsniffer' version '1.2.0'
}

ext.opentracingVersion = '0.22.0'
ext.guavaVersion = '18.0'
ext.apacheThriftVersion = '0.9.2'
ext.jerseyVersion = '2.22.2'
ext.slf4jVersion = '1.7.16'
ext.apacheHttpComponentsVersion = '4.1.2'
ext.gsonVersion = '2.8.0'

ext.junitVersion = '4.12'
ext.mockitoVersion = '2.2.28'
ext.junitDataProviderVersion = '1.10.0'

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

allprojects {
    apply plugin: 'idea' // intellij support
    apply plugin: 'jacoco'

    group = 'com.uber.jaeger'
    version = '0.19.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'ru.vyarus.animalsniffer'
    apply plugin: 'com.github.hierynomus.license'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'checkstyle'

    compileJava {
        sourceCompatibility = 1.6
        targetCompatibility = 1.6
    }

    compileTestJava {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    }

    animalsniffer {
        sourceSets = [sourceSets.main]
    }

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    task listJars {
        doLast {
            configurations.compile.each { File file -> println file.name }
        }
    }

    checkstyle {
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')
        toolVersion = "7.6.1"
    }

    license {
        header rootProject.file('license-template')
        skipExistingHeaders true
        strictCheck true
        include "**/*.java"
        ext.year = Calendar.getInstance().get(Calendar.YEAR)
        ext.name = 'Uber Technologies, Inc'
        ignoreFailures = false
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
    }

    check.dependsOn tasks.license

    apply from: '../gradle/publish.gradle'
    test {
    testLogging {
        events "failed"
        exceptionFormat "full"

        // remove standard output/error logging from --info builds
        // by assigning only 'failed' and 'skipped' events
        info.events = ["failed", "skipped"]
       }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.16.12'
        compileOnly 'org.codehaus.mojo:animal-sniffer-annotations:1.15'
    }

}

task codeCoverageReport(type: JacocoReport, group: 'Coverage reports') {
    dependsOn(subprojects*.test)

    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        html.enabled = true
        xml.enabled = true
        xml.destination = "${buildDir}/reports/jacoco/report.xml"
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/crossdock/**',
                              '**/thrift/**',
                              '**/thriftjava/**',
                    ])
        })
    }
}

configure(subprojects.findAll {it.name != 'jaeger-thrift'}) {
   apply plugin: 'net.ltgt.errorprone'
   dependencies {
     errorprone 'com.google.errorprone:error_prone_core:2.0.15'
   }
}
