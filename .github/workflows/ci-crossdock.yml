name: Crossdock

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  crossdock:
    runs-on: ubuntu-latest
    name: Crossdock
    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/setup-java@v2
      with:
        java-version: "1.8"
    
    - uses: docker/login-action@v1
      id: dockerhub-login
      with:
        username: jaegertracingbot
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      if: env.DOCKERHUB_TOKEN != null

    - name: Export DOCKERHUB_LOGIN variable
      run: echo "DOCKERHUB_LOGIN=true" >> $GITHUB_ENV
      if: steps.dockerhub-login.outcome == 'success'

    - name: Export Branch variable for pull_request event
      id: branch-pr
      run: |
        export BRANCH=${GITHUB_HEAD_REF}
        echo "Running on branch=$BRANCH"
        echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
        echo ::set-output name=branch::$BRANCH
      if: github.event_name == 'pull_request'
    
    - name: Export Branch variable for push event
      id: branch-push
      run: |
        export BRANCH=${GITHUB_REF##*/}
        echo "Running on branch=$BRANCH"
        echo $BRANCH >> $GITHUB_ENV
        echo ::set-output name=branch::$BRANCH
      if: github.event_name == 'push'

    - name: Run Crossdock
      id: crossdock
      run: make crossdock-fresh

    - name: Publish crossdock
      run: |
        REPO=jaegertracing/xdock-java
        TAG=$(if [ "$BRANCH" == "master" ]; then echo "latest"; else echo "${BRANCH///}"; fi)
        COMMIT=${GITHUB_SHA::8}
        echo "BRANCH=$BRANCH, REPO=$REPO, TAG=$TAG, COMMIT=$COMMIT"
        ./gradlew shadowJar
        pushd 'jaeger-crossdock'
        docker build -f Dockerfile -t $REPO:$COMMIT
        popd
        docker tag $REPO:$COMMIT $REPO:$TAG
        docker push $REPO
      if: |
        github.event_name != 'pull_request' &&
        steps.crossdock.outcome == 'success' &&
        (steps.branch-pr.outputs.branch == 'master' || steps.branch-push.outputs.branch == 'master')