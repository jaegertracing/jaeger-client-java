ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

def getRepositoryUsername() {
    return hasProperty('ossrhUsername') ? ossrhUsername : ""
}

def getRepositoryPassword() {
    return hasProperty('ossrhPassword') ? ossrhPassword : ""
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.jaegertracing'
            version = getVersionForBuild()

            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'jaeger-client'
                packaging = 'jar'
                description = 'Jaeger Java bindings for OpenTracing API'
                url = 'https://github.com/jaegertracing/jaeger-client-java'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'oibe'
                        name = 'Onwukike Ibe'
                        email = 'oibe@uber.com'
                    }
                    developer {
                        id = 'yurishkuro'
                        name = 'Yuri Shkuro'
                        email = 'ys@uber.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:jaegertracing/jaeger-client-java.git'
                    developerConnection = 'scm:git:git@github.com:jaegertracing/jaeger-client-java.git'
                    url = 'git@github.com:jaegertracing/jaeger-client-java.git'
                }
            }
        }
    }
}


nexusPublishing {
    username = getRepositoryUsername()
    password = getRepositoryPassword()
}

signing {
    if (isReleaseVersion) {
        sign publishing.publications.mavenJava
    }
}
